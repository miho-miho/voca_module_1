<!doctype html><!-- vmod_detail_table : 分類語彙表検索の詳細ページ -->
<html lang="jp">
<head>
  <%- include('../partials/v_head') %>
</head>
  <body>
    <header><%- include('../partials/header') %></header>
    <main class="container main">
      <div class="row">
        <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
          <ol class="breadcrumb bg-secondary top-bread">
            <li class="breadcrumb-item"><a href="/voca/" class="first-item">東外大言語モジュール top(Node版)</a></li>
            <li class="breadcrumb-item active"><a href="/voca/<%- lg %>/v/"><%= lang_jp %></a></li>
            <li class="breadcrumb-item active">語彙モジュール</li>
          </ol>
        </nav>
          <%- include('../partials/v_sidebar') %>
        <div class="col main-body">
          <div class="card">
            <div class="card-header">
              <h4 class="card-title">語彙詳細</h4>
            </div>
          </div>
          <div class="row">
            <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
              <ol class="breadcrumb bg-secondary">
                <li class="breadcrumb-item active" aria-current="page"><a href="" class="first-item" id="linkToPage"></a></li>
                <li class="breadcrumb-item active" aria-current="page">詳細</li>
                <li class="breadcrumb-item active"><a href="" class="linkToBefore"><strong><%= category %></strong></a></li>
              </ol>
            </nav>
            <div class="">
              <p class="float-end"><span id="now_item">今</span>/<span id="all_items"></span>ページ</p>
            </div>
            <div class="container">
              <button type="button" name="button" class="btn btn-outline-primary col-auto btn_previous">　前　</button>
              <button type="button" name="button" class="btn btn-outline-primary col-auto btn_next">　次　</button>
            </div>
            <div class="link-explanation row align-items-center">
              <span class="col-auto col-auto"><span class="linkicon badge bg-info text-dark">文</span> 文法モジュールへリンク</span>
              <span class="col-auto col-auto"><span class="linkicon badge bg-success">会</span> 会話モジュールへリンク</span>
              <span class="col-auto col-auto"><span class="linkicon badge bg-warning text-dark">発</span> 発音モジュールへリンク</span>
            </div>
            <div class="result-area container">
              <div class="row align-items-center justify-content-center">
                <h2 class="targetWord col-auto"></h2>
                <div class="col-auto targetWordAudio"></div>
              </div>
              <hr class="featurette-divider">
              <div class="result-card-area">
              </div>
              <div class="container text-center button-area">
                <button type="button" name="button" class="btn btn-outline-primary col-auto float-start btn_previous">　前　</button>
                <a href="" class="linkToBefore">戻る</a>
                <button type="button" name="button" class="btn btn-outline-primary col-auto float-end btn_next">　次　</button>
              </div>
            </div>
            </div>
          </div>
        </div>
      </div>
    </main>
    <div class="push"></div>
    <footer><%- include('../partials/footer') %></footer>
    <!-- Option 1: Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <script>
    var targetArray = <%- JSON.stringify(targetObj) %>;
    var targetIndex = "";
    var targetItems;
    $("#all_items").text(targetArray.length)
    for (var i = 0; i < targetArray.length; i++) {
      if (targetArray[i].midasi === "<%= targetWord %>") {
        targetIndex = i
      }
    }
    if ("<%= tag %>".includes(".")) {
      $("#linkToPage").text("基礎語彙分類表");
      $("#linkToPage").attr("href", "./table");
      $(".linkToBefore").attr("href", "./t_search_list=<%= tag %>")
    } else {
      $("#linkToPage").text("基礎語彙の学習");
      $("#linkToPage").attr("href", "./catego");
      $(".linkToBefore").attr("href", "./catego#<%- category %>")
    }
      showResult(targetIndex)
      $(".btn_previous").click(function(){
        $(".btn_next").prop("disabled", false);
        targetIndex = targetIndex-1
        $(".targetWordAudio").empty();
        if (targetIndex >= 0) {
          $(".result-card-area").empty()
          showResult(targetIndex);
        }
      });
      $(".btn_next").click(function(){
        $(".btn_previous").prop("disabled", false);
          targetIndex = targetIndex+1
          $(".targetWordAudio").empty();
          if (targetIndex < targetArray.length) {
            $(".result-card-area").empty()
            showResult(targetIndex);
          }
      });
      function showResult(index){
        $("#now_item").text(index+1);
        var targetItem = targetArray[index]
        $(".targetWord").text(targetItem.midasi)
        $(".targetWordAudio").append(targetItem.midashiaudio)
        var num = 1;
        targetItem.inst.forEach((item) => {
          let explain = item.usage
          var imi_list = []
          if (explain.includes("＊")) {
            imi_list.push(explain.replace("＊", "<br>＊"))
          } else {
            imi_list.push(explain)
          }
          $(".result-card-area").append('<p class="explain"><span>（'+num+'）</span>'+imi_list+'</p>')
          $(".result-card-area").append('<div class="card"><div class="card-header col"><h5 class="card-title text-center">＜例文＞</h5></div><div class="card-body examples"></div></div>')
          item.reibun.forEach((element) => {
            for (var s of element) {
              $(".examples:last").append('<div class="row example">')
              var sentence = replaceTokenColor(s.token, s.targetlanguage, s.token_index, )
              if (s.trans.length > 0) {
                $(".example:last").append('<div class="col-sm-auto col-xs-12 inst"><p>・'+sentence+'</p><p>・'+s.trans+'</p></div>') 
              } else {
                $(".example:last").append('<div class="col-sm-auto col-xs-12 inst"><p>・'+sentence+'</p></div>')
              }
              $(".example:last").append('<div class="col-sm-auto col-xs-12 instlink">'+s.link+'</div>')
            }
          });
          num+=1;
        });
        switch (index) {
            case 0:
              $(".btn_previous").prop("disabled", true);
              break;
            case targetArray.length-1:
              $(".btn_next").prop("disabled", true);
              break;
          }
          if (targetArray.length === 1) {
            $(".btn_previous").prop("disabled", true);
            $(".btn_next").prop("disabled", true);
          }
      }
      let windowWidth = $(window).width()
      if (windowWidth < 767) {
        $(function(){
          $("#v_sidebar").before($(".main-body"));
        });
      }
      $(document).on('click', '.gmodsound', function(){
        var audio = $(this).find(".gmodaudio")[0]
        audio.play();
      });

      $(document).on('click', '.vmodsound', function(){
        var audio = $(this).find(".vmodaudio")[0]
         audio.play();
      });

      $(document).on('click', '.wordsound', function(){
        var audio = $(this).find(".basicaudio")[0]
         audio.play();
      });

      var dmodAudioObj;
      function playDmodSound(dmodsound, startTime, stopTime){
        if(dmodAudioObj != null)dmodAudioObj.pause();
        dmodAudioObj = new Audio(dmodsound);
        dmodAudioObj.currentTime = startTime;
        dmodAudioObj.addEventListener("timeupdate", function (){
          if (stopTime != 0 && dmodAudioObj != null && stopTime < dmodAudioObj.currentTime){
            dmodAudioObj.pause();
            dmodAudioObj.removeEventListener("timeupdate",this);
            dmodAudioObj=null;
                return;
          }
        });
        dmodAudioObj.play();
      }
      //replaceTokenColor
      function replaceTokenColor(token, sentence, token_index){
        var tokenafter = "";
        var topenTagStr = "1234567890";
        var closeTagStr = "0987654321";
        var changeStr = "";
        var searchStrt = 0;
        if (token === "" || token === null) {
          return sentence
       } else {
          if (token_index != "" && token_index != null) {
            // 指定された言葉が文中に複数出てきている場合。
            // 何番目の言葉を変換するのか指定されているので、forでまわして位置を探す。
            for (let i = 0; i < token_index; i++) {
              // 文字列を検索して、最初に見つかった位置を返す
              // 例）文字列:AAAABCAAAABAC 検索対象文字列:ABC 返ってくる値:3
              searchStrt = sentence.indexOf(token, searchStrt)
              console.log(searchStrt);
              // 検索対象の文字列が次に出てくる位置を探すために、検索開始位置に対象文字列数を足す
              // 検索開始位置 = 前回文字列があった場所 + 検索対象文字列
              // 例）文字列:AAAABCAAAABAC 検索対象文字列:ABC 検索開始位置 = 3 + (3-1)
              // ※指定された検索回数に到達していなければ次の検索用に数値を足す
              if (i < token) {
                searchStrt ++;
              }
            }
              // 指定された言葉が文章の中にあったら、$searchStrtに数値が返ってくるので
              // その時は文字を赤くする。数値が帰って来ない場合は$sentenceをそのまま返す
           if (typeof searchStrt === Number) {
             // 指定された言葉より前の文章を取得する
             changeStr = sentence.indexOf(0, searchStrt);

             // 前の文章 + 指定された言葉
              changeStr = changeStr+'<span class="token">'+token+'</span>';
              // $changeStr = $changeStr ."<span class=\"token\">" .$token ."</span>";
              // 前の文章 + 指定された言葉 + 後の文章
              var token_b = function byteLengthOf(token) {
              return Buffer.byteLength(token);
              }
              changeStr = changeStr+sentence.indexOf(searchStrt + token_b);
              sentence = changeStr;
            }
          } else {
              tokenafter = topenTagStr+token+closeTagStr;
              sentence = sentence.replace(token, tokenafter);
              sentence = sentence.replace(topenTagStr, '<span class="token">');
              sentence = sentence.replace(closeTagStr, "</span>");
        }
          return sentence;
        }
      }
    </script>
    <style>
      .token {
        color: red;
        font-weight: bolder;
      }
      .btn_previous:disabled, .btn_next:disabled{
        background-color: gray;
        color: white;
        border: black;
      }
      .result-card {
        margin-top: 0px;
      }
      .button-area {
        padding-bottom: 40px;
      }
      .link-explanation{
        padding-top: 10px;
        padding-bottom: 10px;
      }
      .linkicon {
        padding-top: 8px;
        padding-bottom: 8px;
      }
      @media screen and (max-width: 480px) {
        .inst > p {
          margin-bottom: 0.5rem;
        }
        .example {
          padding-bottom: 1rem;;
        }
        .targetWordAudio > button{
          padding: 3px 6px;
        }
      }
    </style>
  </body>
</html>
